@tailwind base;
@tailwind components;
@tailwind utilities;

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}  */

/* memoria */

.wrapper {
  box-sizing: content-box;
  width: 26.87em;
  padding: 2.5em 3em;
  background-color: #ffffff;
  position: absolute;
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
  border-radius: 0.6em;
  box-shadow: 0 0.9em 2.8em rgba(86, 66, 0, 0.2);
}

.game-container {
  position: relative;
  width: 100%;
  display: grid;
  gap: 0.6em;
}

.stats-container {
  text-align: right;
  margin-bottom: 1.2em;
}

.stats-container span {
  font-weight: 600;
}

.card-container {
  position: relative;
  width: 6.25em;
  height: 6.25em;
  cursor: pointer;
}

.card-before, .card-after {
  position: absolute;
  border-radius: 5px;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 4px solid #000000;
  transition: transform 0.7s ease-out;
  backface-visibility: hidden;
}

.card-before {
  background-color: var(--color);
  font-size: 2.8em;
  font-weight: 600;
}

.card-after {
  background-color: #ffffff;
  transform: rotateY(180deg);
}

.card-after img {
  width: 64px;
  height: 64px;
}

.card-container.flipped .card-before {
  transform: rotateY(180deg);
}

.card-container.flipped .card-after {
  transform: rotateY(0deg);
}

.controls-container {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: var(--color);
  top: 0;
}

button {
  border: none;
  border-radius: 0.3em;
  padding: 1em 1.5em;
  cursor: pointer;
}

#stop {
  font-size: 1.1em;
  display: block;
  margin: 1.1em auto 0 auto;
  background-color: #000000;
  color: #ffffff;
}
.controls-container button {
  font-size: 1.3em;
  box-shadow: 0 0.6em 2em rgba(86, 66, 0, 0.2);
}

.hide {
  display: none;
}

#result {
  text-align: center;
}

#result h2 {
  font-size: 2.5em;
}

#result h4 {
  font-size: 1.8em;
  margin: 0.6em 0 1em 0;
}

@media screen and (max-width: 560px) {
  .wrapper {
      width: 20.87em;
  }
  
  .game-container {
      width: 70%;
  }
  
  .card-container {
      width: 5em;
      height: 5em;
  }
}

@media screen and (max-width: 440px) {
  .wrapper {
      width: 15em;
  }
  
  .game-container {
      width: 70%;
  }
  
  .card-container {
      width: 4.5em;
      height: 4.5em;
      left: -50%;
  }
}

@media screen and (max-width: 320px) {
  .wrapper {
      width: 13em;
  }
  
  .game-container {
      width: 70%;
  }
  
  .card-container {
      width: 4em;
      height: 4em;
      left: -60%;
  }
}

/* sudoku */

:root {
  --bgMain: #f0f2f5;
  --bgBody: #fff;
  --colorTxt: #000;
  --filledColor: #000;
  --filledBg: #cD9C8F4;
  --white: #fff;
  --lavander: #7C6CB5;
  --red: #e91e63;
  --black: #000;

  --sudokuCellSize: 40px;

  --borderRadius: 10px;

  --spaceY: 15px;

  --gap: 2px;

  --fontSize: 1.5rem;
  --fontSizeLg: 2rem;
  --fontSizeXl: 3rem;
}
/* 
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
}

body {
  font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
  background-color: var(--bgBody);
  overflow-x: hidden;
  user-select: none;
} */

input {
  font-family: "Potta One", cursive;
  border: 2px solid var(--bgMain);
  color: var(--colorTxt);
}

input:hover,
input:focus {
  border-color: var(--lavander);
}

a {
  text-decoration: none;
  color: unset;
}

ul {
  list-style-type: none;
}


.main {
  height: 100vh;
  display: grid;
  place-items: center;
}

.screen {
  position: relative;
  overflow: hidden;
  height: 100%;
  padding: 2em 0;
  min-width: 400px;
}

.startScreen {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: translateX(-100%);
  transition: transform 0.3s ease-in-out;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.startScreen.active {
  transform: translateX(0);
}

.startScreen > * + * {
  margin-top: 20px;
}

.inputName {
  height: 80px;
  width: 280px;
  border-radius: var(--borderRadius);
  outline: 0;
  background-color: var(--bgMain);
  padding: 20px;
  font-size: var(--fontSizeLg);
  text-align: center;
}

.btn {
  height: 80px;
  width: 280px;
  background-color: var(--bgMain);
  color: var(--colorTxt);
  border-radius: var(--borderRadius);
  display: grid;
  place-items: center;
  transition: width 0.3s ease-in-out;
  overflow: hidden;
  font-size: var(--fontSizeLg);
  cursor: pointer;
}

.btnBlue {
  background-color: var(--lavander);
  color: var(--white);
}

.inputErr {
  border-color: var(--red);
  animation: bounce 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

@keyframes bounce {
  0% {
      transform: translateX(0);
  }
  25% {
      transform: translateX(20px);
  }
  50% {
      transform: translateX(-20px);
  }
  100% {
      transform: translateX(0);
  }
}

.mainGame {
  display: flex;
  height: 100%;
  width: 100%;
  flex-direction: column;
  justify-content: space-between;
  transform: translateX(100%);
  transition: transform 0.3s ease-in-out;
}

.mainGame.active {
  transform: translateX(0);
}

.mainSudokuGrid {
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(9, auto);
}

.mainGridCell {
  height: var(--sudokuCellSize);
  width: var(--sudokuCellSize);
  border-radius: var(--borderRadius);
  background-color: var(--bgMain);
  color: var(--lavander);
  display: grid;
  place-items: center;
  font-size: var(--fontSize);
  cursor: pointer;
}

.mainGridCell.filled {
  background-color: var(--filledBg);
  color: var(--filledColor);
}

.mainGridCell.selected {
  background-color: var(--lavander);
  color: var(--white);
}

.mainGridCell:hover {
  border: 2px solid var(--lavander);
}

.mainGridCell.hover {
  border: 1px solid var(--lavander);
}

.dark .mainGridCell.hover {
  border: 1px solid var(--lavander);
}

.mainGridCell.err {
  background-color: var(--red);
  color: var(--white);
}

.mainGameInfo {
  margin-top: var(--spaceY);
  margin-bottom: 10px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 10px;
}

.mainGameInfoBox {
  height: 45px;
  background-color: var(--bgMain);
  color: var(--colorTxt);
  border-radius: var(--borderRadius);
  display: grid;
  place-items: center;
  padding: 0 20px;
  font-size: var(--fontSize);
}

.mainGameInfoTime {
  position: relative;
  align-items: center;
  justify-content: center;
  padding-left: 2rem;
  margin-bottom: auto;
}

.pauseBtn {
  position: absolute;
  right: 10px;
  height: 30px;
  width: 30px;
  border-radius: var(--borderRadius);
  background-color: var(--lavander);
  color: var(--white);
  font-size: var(--fontSize);
  display: grid;
  place-items: center;
  cursor: pointer;
}

.numbers {
  margin-top: var(--spaceY);
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 5px;
}

.number {
  height: var(--sudokuCellSize);
  border-radius: var(--borderRadius);
  background-color: var(--bgMain);
  color: var(--colorTxt);
  display: grid;
  place-items: center;
  font-size: var(--fontSize);
  cursor: pointer;
}

.delete {
  background-color: var(--red);
  color: var(--white);
  height: var(--sudokuCellSize);
  border-radius: var(--borderRadius);
  display: grid;
  place-items: center;
  font-size: var(--fontSize);
  cursor: pointer;
}

.pauseScreen,
.resultScreen {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bgBody);
  align-items: center;
  justify-content: center;
  flex-direction: column;
  display: none;
}

.pauseScreen.active,
.resultScreen.active {
  display: flex;
}

.pauseScreen > * + *,
.resultScreen > * + * {
  margin-top: 20px;
}

.resultScreen.active div {
  animation: zoomIn 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.pauseScreen.active .btn {
  animation: zoomIn 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.resultScreen .congrate {
  font-size: var(--fontSizeXl);
  color: var(--lavander);
}

.resultScreen .info {
  color: var(--colorTxt);
  font-size: var(--fontSize);
}

#resultTime {
  color: var(--lavander);
  font-size: var(--fontSizeXl);
}

.zoomIn {
  animation: zoomIn 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

@keyframes zoomIn {
  0% {
      transform: scale(3);
  }
  100% {
      transform: scale(1);
  }
}

.cellErr {
  animation: zoomOutShake 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

@keyframes zoomOutShake {
  0% {
      transform: scale(2);
  }
  25% {
      transform: scale(2) rotate(30deg);
  }
  50% {
      transform: scale(2) rotate(-30deg);
  }
  100% {
      transform: scale(1);
  }
}

@media only screen and (max-width: 800px) {
  .inputName,
  .btn {
      width: 250px;
  }
}

@media only screen and (max-width: 500px) {
  .inputName,
  .btn {
      width: 200px;
  }
}
